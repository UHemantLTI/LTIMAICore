apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: mdg-predict-metrics-train # executable id, must be unique across all your workflows (YAML files)
  annotations:
    scenarios.ai.sap.com/description: "Learning to predict values of MDG"
    scenarios.ai.sap.com/name: "MDG Training"
    executables.ai.sap.com/description: "Generate metrics"
    executables.ai.sap.com/name: "mdg-predict-training-metric" # Executable name should describe the workflow in the use case
    artifacts.ai.sap.com/mdg-dataset.kind: "dataset" # Helps in suggesting the kind of artifact that can be attached.
    artifacts.ai.sap.com/allmodels.kind: "model" # Helps in suggesting the kind of artifact that can be generated. 
  labels:
    scenarios.ai.sap.com/id: "mdg-datalines"
    ai.sap.com/version: "1.0"
spec:
  imagePullSecrets:
    - name: rohanreddy-docker-registry # your docker registry secret
  entrypoint: mypipeline
  templates:
  - name: mypipeline
    steps:
    - - name: mypredictor
        template: mycodeblock1
  - name: mycodeblock1
    inputs:
      artifacts:  # placeholder for cloud storage attachements
        - name: mdg-dataset # a name for the placeholder
          path: /app/data/ # where to copy in the Dataset in the Docker image
    outputs:
      artifacts:
        - name: allmodels # name of the artifact generated, and folder name when placed in S3, complete directory will be `../<executaion_id>/housepricemodel`
          globalName: allmodels # local identifier name to the workflow, also used above in annotation
          path: /app/model/ # from which folder in docker image (after running workflow step) copy contents to cloud storage
          archive:
            none:   # specify not to compress while uploading to cloud
              {}
    container:
      image: docker.io/rohandoc99/machine-learning-model:01 # Your docker image name
      command: ["/bin/sh", "-c"]
      args:
        - "python /app/src/main.py"
